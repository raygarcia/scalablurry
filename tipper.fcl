// Identical to jFuzzyLogic with the following changes:
// COG --> CoG
// Range added
//

FUNCTION_BLOCK tipper	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	service : REAL;
	food : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	tip : REAL;
END_VAR

FUZZIFY service			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM poor := (0, 1) (4, 0) ; 
	TERM good := generalizedBell 1 1 5 //trapetzoidal 1 4 6 9//sigmoidal 1 5 // // // gaussian 5 2 //  // instead of (1, 0) (4,1) (6,1) (9,0);
	TERM excellent := (6, 0) (9, 1);
END_FUZZIFY

FUZZIFY food			// Fuzzify input variable 'food': { 'rancid', 'delicious' }
	TERM rancid := triangular 0 1 3 // instead of (0, 1) (1, 1) (3,0) ;
	TERM delicious := (7,0) (9,1);
END_FUZZIFY

DEFUZZIFY tip			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
    RANGE := (0 .. 30);
	TERM cheap := triangular 0 5 10 // instead of (0,0) (5,1) (10,0);
	TERM average := triangular 10 15 20 // instead of (10,0) (15,1) (20,0);
	TERM generous := triangular 20 25 30 // instead of (20,0) (25,1) (30,0);
	METHOD : CoG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF service IS poor OR food IS rancid THEN tip IS cheap;
	RULE 2 : IF service IS good THEN tip IS average; 
	RULE 3 : IF service IS excellent AND food IS delicious THEN tip IS generous;
END_RULEBLOCK

END_FUNCTION_BLOCK

